

// tests for settings
// Generated by serverless-mocha-plugin

const mod = require('../../functions/users/settings/handler.js');
const mochaPlugin = require('serverless-mocha-plugin');
const FactoryGirl = require('../factories/factories');
const wrapper = mochaPlugin.lambdaWrapper;
const assert = require('chai').assert;
let userId = 0;

// const liveFunction = {
//   region: process.env.SERVERLESS_REGION,
//   lambdaFunction: process.env.SERVERLESS_PROJECT + '-settings',
// }

describe('settings', () => {
  userId = 0;
  before(done => {
//  wrapper.init(liveFunction); // Run the deployed lambda
    wrapper.init(mod);
    done();
  });

  beforeEach(done => {
    FactoryGirl.create('userSettings', (err, model) => {
      userId = model.user_id;
      done();
    });
  });

  afterEach(done => {
    FactoryGirl.cleanup(done);
  });

  it('PUT with invalid params', (done) => {
    wrapper.run({
      userIdAndMachineId: `${userId}-1`,
      queryParams: {
        language: '1ru',
      },
    }, (err) => {
      try {
        assert.notEqual(err, null);
        done();
      } catch (e) {
        done(Error(e.message));
      }
    });
  });

  it('PUT with valid params', done => {
    const lang = 'ru';
    wrapper.run({
      userIdAndMachineId: `${userId}-1`,
      queryParams: {
        language: lang,
      },
    }, (error, response) => {
      try {
        assert.propertyVal(response, 'language', lang);
        done();
      } catch (e) {
        done(Error(e.message));
      }
    });
  });
});
